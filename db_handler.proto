syntax = "proto3";

package db_service;

service DBService {
    rpc check_user_exists (CheckUserExistsRequest) returns (CheckUserExistsResponse);
    rpc get_uuid (GetUUIDRequest) returns (GetUUIDResponse);
    rpc set_access_data (SetAccessDataRequest) returns (SetAccessDataResponse);
    rpc set_new_user (SetNewUserRequest) returns (SetNewUserResponse);
    rpc get_access_token_by_uuid (GetAccessTokenByUUIDRequest) returns (GetAccessTokenByUUIDResponse);
    rpc set_avatar (SetAvatarRequest) returns (SetAvatarResponse);
}

message CheckUserExistsRequest {
    string school_user_id = 1;
}

message CheckUserExistsResponse {
    bool exists = 1;
}

message GetUUIDRequest {
    string school_user_id = 1;
}

message GetUUIDResponse {
    string uuid = 1;
}

message SetAccessDataRequest {
    string access_token = 1;
    string refresh_token = 2;
    string session_state = 3;
    int32 expires_in = 4;
    string school_user_id = 5;
}

message SetAccessDataResponse {
    string description = 1;
    int32 status = 2;
}

message SetNewUserRequest {
    string school_user_id = 1;
    string uuid = 2;
    int32 expires_in = 3;
    string access_token = 4;
    string refresh_token = 5;
    string session_state = 6;
}

message SetNewUserResponse {
    string description = 1;
    int32 status = 2;
    string capy_uuid = 3;
}

message GetAccessTokenByUUIDRequest {
    string uuid = 1;
}

message GetAccessTokenByUUIDResponse {
    string access_token = 1;
    string school_user_id = 2;
    int32 time_create = 3;
    int32 expires_in = 4;
    int32 status = 5;
    string description = 6;
}

message SetAvatarRequest {
    string uuid = 1;
    string avatar = 2;
}

message SetAvatarResponse {
    string description = 1;
    int32 status = 2;
}